from datetime import datetime
import matplotlib.pyplot as plt
import pandas as pd


def main():
    exec_time = datetime.now().strftime("%Y-%m-%d-%H-%M-%S")
    png_output = f"/home/fmoy3/git_repo/franklin/bu_et_al_2021/clustered_bdid/img/"
    george_csv = pd.read_csv("/home/fmoy3/git_repo/franklin/bu_et_al_2021/bdid_samples/bu_all.csv")
    clustered_csv = pd.read_csv("/home/fmoy3/git_repo/franklin/clustered_bdid_metrics-2022-03-24-14-46-01.csv")
    
    # Plot the metrics from George's CSV vs CP
    fig = plt.figure()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(george_csv['cp_level'], george_csv['cp_r_citing_pub_nonzero'])
    ax.set_xscale('log')
    ax.set_ylim([0,100000])
    plt.title('cp_r_citing_pub_nonzero VS log(cp_level)')
    plt.ylabel('cp_r_citing_pub_nonzero')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}r_citing_vs_level-{exec_time}.png')
    fig.clear()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(george_csv['cp_level'], george_csv['tr_citing'])
    ax.set_xscale('log')
    ax.set_ylim([0,300000])
    plt.title('tr_citing VS log(cp_level)')
    plt.ylabel('tr_citing')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}tr_citing_vs_level-{exec_time}.png')
    fig.clear()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(george_csv['cp_level'], george_csv['cp_r_cited_pub_nonzero'])
    ax.set_xscale('log')
    ax.set_ylim([0,35000])
    plt.title('cp_r_cited_pub_nonzero VS log(cp_level)')
    plt.ylabel('cp_r_cited_pub_nonzero')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}r_cited_vs_level-{exec_time}.png')
    fig.clear()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(george_csv['cp_level'], george_csv['tr_cited_pub'])
    ax.set_xscale('log')
    ax.set_ylim([0,100000])
    plt.title('tr_cited_pub VS log(cp_level)')
    plt.ylabel('tr_cited_pub')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}tr_cited_vs_level-{exec_time}.png')
    fig.clear()

    # Plot the metrics from clustered CSV
    ax = fig.add_subplot(1,1,1)
    ax.scatter(clustered_csv['cp_level'], clustered_csv['cp_r_citing_nonzero_clustered'])
    ax.set_xscale('log')
    ax.set_ylim([0,100000])
    plt.title('cp_r_citing_pub_nonzero_clustered VS log(cp_level)')
    plt.ylabel('cp_r_citing_pub_nonzero_clustered')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}clustered_r_citing_vs_level-{exec_time}.png')
    fig.clear()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(clustered_csv['cp_level'], clustered_csv['tr_citing_clustered'])
    ax.set_xscale('log')
    ax.set_ylim([0,300000])
    plt.title('tr_citing_clustered VS log(cp_level)')
    plt.ylabel('tr_citing_clustered')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}clustered_tr_citing_vs_level-{exec_time}.png')
    fig.clear()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(clustered_csv['cp_level'], clustered_csv['cp_r_cited_nonzero_clustered'])
    ax.set_xscale('log')
    ax.set_ylim([0,35000])
    plt.title('cp_r_cited_pub_nonzero_clustered VS log(cp_level)')
    plt.ylabel('cp_r_cited_pub_nonzero_clustered')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}clustered_r_cited_vs_level-{exec_time}.png')
    fig.clear()
    ax = fig.add_subplot(1,1,1)
    ax.scatter(clustered_csv['cp_level'], clustered_csv['tr_cited_clustered'])
    ax.set_xscale('log')
    ax.set_ylim([0,100000])
    plt.title('tr_cited_clustered VS log(cp_level)')
    plt.ylabel('tr_cited_clustered')
    plt.xlabel('log(cp_level)')
    plt.savefig(f'{png_output}clustered_tr_cited_vs_level-{exec_time}.png')
    fig.clear()


if __name__ == '__main__':
    main()